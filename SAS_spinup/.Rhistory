npp.croot[mind]   <- get.var.ncdf(now,"MMEAN_NPPCROOT")/365*dpy[m]
npp.froot[mind]   <- get.var.ncdf(now,"MMEAN_NPPFROOT")/365*dpy[m]
npp.sapwood[mind] <- get.var.ncdf(now,"MMEAN_NPPSAPWOOD")/365*dpy[m]
npp.wood[mind]    <- get.var.ncdf(now,"MMEAN_NPPWOOD")/365*dpy[m]
npp.seed[mind]    <- get.var.ncdf(now,"MMEAN_NPPSEEDS")/365*dpy[m]
close.ncdf(now)
}
sum(npp.leaf,npp.croot,npp.froot,npp.sapwood,npp.wood,npp.seed)/sum(npp) #total alloc
sum(npp.leaf)/sum(npp)
sum(npp.croot)/sum(npp)
sum(npp.froot)/sum(npp)
sum(npp.sapwood)/sum(npp)
fnpp[6,y]       <- sum(npp.wood)/sum(npp)
fnpp <- matrix(ncol=7,nrow=(yearz-yera+1))
fnpp <- matrix(ncol=7,nrow=(yearz-yeara+1))
fnpp[1,y]       <- sum(npp.leaf,npp.croot,npp.froot,npp.sapwood,npp.wood,npp.seed)/sum(npp) #total alloc
fnpp[2,y]       <- sum(npp.leaf)/sum(npp)
fnpp[3,y]       <- sum(npp.croot)/sum(npp)
fnpp[4,y]       <- sum(npp.froot)/sum(npp)
fnpp[5,y]       <- sum(npp.sapwood)/sum(npp)
fnpp[6,y]       <- sum(npp.wood)/sum(npp)
fnpp[7,y]       <- sum(npp.seed/sum(npp)
fnpp[y,1]       <- sum(npp.leaf,npp.croot,npp.froot,npp.sapwood,npp.wood,npp.seed)/sum(npp) #total alloc
fnpp[y,2]       <- sum(npp.leaf)/sum(npp)
fnpp[y,3]       <- sum(npp.croot)/sum(npp)
fnpp[y,4]       <- sum(npp.froot)/sum(npp)
fnpp[y,5]       <- sum(npp.sapwood)/sum(npp)
fnpp[y,6]       <- sum(npp.wood)/sum(npp)
fnpp[y,7]       <- sum(npp.seed/sum(npp)
)
yind <- y-yeara+1
fnpp[yind,1]       <- sum(npp.leaf,npp.croot,npp.froot,npp.sapwood,npp.wood,npp.seed)/sum(npp) #total alloc
fnpp[yind,2]       <- sum(npp.leaf)/sum(npp)
fnpp[yind,3]       <- sum(npp.croot)/sum(npp)
fnpp[yind,4]       <- sum(npp.froot)/sum(npp)
fnpp[yind,5]       <- sum(npp.sapwood)/sum(npp)
fnpp[yind,6]       <- sum(npp.wood)/sum(npp)
fnpp[yind,7]       <- sum(npp.seed/sum(npp)
)
fnpp[yind,]
dat.dir    <- paste("/projectnb/cheas/paleon/ED_runs/phase1a_runs/",sites[s],"/analy/",sep="")
match.files <- grep("-E-",list.files(dat.dir))
files <- list.files(dat.dir)
mon.files  <- files[match.files] #monthly files only
#Get time window
yeara <- as.numeric(strsplit(mon.files,"-")[[1]][3]) #first year
yearz <- as.numeric(strsplit(mon.files,"-")[[length(mon.files)]][3]) #last year
montha <- as.numeric(strsplit(mon.files,"-")[[1]][4]) #first month
monthz <- as.numeric(strsplit(mon.files,"-")[[length(mon.files)]][4]) #first month
#Set up storage
atm_pres <- atm_vpd <- atm_pre <- atm_tmp <- atm_rnt <- atm_trsp <- atm_swat <- npp_site <- vector()
cbal.pft <- cbalbr.pft <- PAR.pft <- lai.pft <- matrix(nrow=((yearz-yeara-1)*12+(12-montha+1)),
ncol=length(pft))
fnpp <- matrix(ncol=7,nrow=(yearz-yeara+1))
for(y in yeara:yearz){
#calculate month start/end based on year
if (y == yeara){
month.begin = montha
}else{
month.begin = 1
}
if (y == yearz){
month.end = monthz
}else{
month.end = 12
}
#reset monthly storage
npp <- npp.leaf <- npp.croot <- npp.froot <- npp.sapwood <- npp.wood <- npp.seed <- vector()
for(m in month.begin:month.end){
#Make the file name.
year.now  = sprintf("%4.4i",y)
month.now = sprintf("%2.2i",m)
day.now   = sprintf("%2.2i",0)
hour.now  = sprintf("%6.6i",0)
file.now  = paste(sites[s],"spin","-E-",year.now,"-",month.now,"-",day.now,"-"
,hour.now,"-",suffix,sep="")
cat(" - Reading file :",file.now,"...","\n")
now <- open.ncdf(paste(dat.dir,file.now,sep=""))
#1. calculate monthly NPP pools
mind              <- m-month.begin+1 #monthly index
npp[mind]         <- get.var.ncdf(now,"MMEAN_NPPDAILY")/365*dpy[m]
npp.leaf[mind]    <- get.var.ncdf(now,"MMEAN_NPPLEAF")/365*dpy[m]
npp.croot[mind]   <- get.var.ncdf(now,"MMEAN_NPPCROOT")/365*dpy[m]
npp.froot[mind]   <- get.var.ncdf(now,"MMEAN_NPPFROOT")/365*dpy[m]
npp.sapwood[mind] <- get.var.ncdf(now,"MMEAN_NPPSAPWOOD")/365*dpy[m]
npp.wood[mind]    <- get.var.ncdf(now,"MMEAN_NPPWOOD")/365*dpy[m]
npp.seed[mind]    <- get.var.ncdf(now,"MMEAN_NPPSEEDS")/365*dpy[m]
close.ncdf(now)
}
#2. Find fraction of total annual NPP transferred to pools
yind <- y-yeara+1
fnpp[yind,1]        <- sum(npp.leaf,npp.croot,npp.froot,npp.sapwood,npp.wood,npp.seed)/sum(npp)
fnpp[yind,2]        <- sum(npp.leaf)/sum(npp)
fnpp[yind,3]        <- sum(npp.croot)/sum(npp)
fnpp[yind,4]        <- sum(npp.froot)/sum(npp)
fnpp[yind,5]        <- sum(npp.sapwood)/sum(npp)
fnpp[yind,6]        <- sum(npp.wood)/sum(npp)
fnpp[yind,7]        <- sum(npp.seed/sum(npp)
}
fnpp <- matrix(ncol=7,nrow=(yearz-yeara+1))
#loop over months and aggregate monthly mean data
for(y in yeara:yearz){
#calculate month start/end based on year
if (y == yeara){
month.begin = montha
}else{
month.begin = 1
}
if (y == yearz){
month.end = monthz
}else{
month.end = 12
}
#reset monthly storage
npp <- npp.leaf <- npp.croot <- npp.froot <- npp.sapwood <- npp.wood <- npp.seed <- vector()
for(m in month.begin:month.end){
#Make the file name.
year.now  = sprintf("%4.4i",y)
month.now = sprintf("%2.2i",m)
day.now   = sprintf("%2.2i",0)
hour.now  = sprintf("%6.6i",0)
file.now  = paste(sites[s],"spin","-E-",year.now,"-",month.now,"-",day.now,"-"
,hour.now,"-",suffix,sep="")
cat(" - Reading file :",file.now,"...","\n")
now <- open.ncdf(paste(dat.dir,file.now,sep=""))
#1. calculate monthly NPP pools
mind              <- m-month.begin+1 #monthly index
npp[mind]         <- get.var.ncdf(now,"MMEAN_NPPDAILY")/365*dpy[m]
npp.leaf[mind]    <- get.var.ncdf(now,"MMEAN_NPPLEAF")/365*dpy[m]
npp.croot[mind]   <- get.var.ncdf(now,"MMEAN_NPPCROOT")/365*dpy[m]
npp.froot[mind]   <- get.var.ncdf(now,"MMEAN_NPPFROOT")/365*dpy[m]
npp.sapwood[mind] <- get.var.ncdf(now,"MMEAN_NPPSAPWOOD")/365*dpy[m]
npp.wood[mind]    <- get.var.ncdf(now,"MMEAN_NPPWOOD")/365*dpy[m]
npp.seed[mind]    <- get.var.ncdf(now,"MMEAN_NPPSEEDS")/365*dpy[m]
close.ncdf(now)
}
#2. Find fraction of total annual NPP transferred to pools
yind <- y-yeara+1
fnpp[yind,1]        <- sum(npp.leaf,npp.croot,npp.froot,npp.sapwood,npp.wood,npp.seed)/sum(npp)
fnpp[yind,2]        <- sum(npp.leaf)/sum(npp)
fnpp[yind,3]        <- sum(npp.croot)/sum(npp)
fnpp[yind,4]        <- sum(npp.froot)/sum(npp)
fnpp[yind,5]        <- sum(npp.sapwood)/sum(npp)
fnpp[yind,6]        <- sum(npp.wood)/sum(npp)
fnpp[yind,7]        <- sum(npp.seed)/sum(npp)
}
plot(fnpp[,1])
plot(fnpp[,2])
plot(fnpp[,3])
plot(fnpp[,4])
plot(fnpp[,5])
plot(fnpp[,6])
plot(fnpp[,7])
plot(fnpp[,1])
now
get.var.ncdf(now,"BLEAF")
year.now  = sprintf("%4.4i",y)
month.now = sprintf("%2.2i",m)
day.now   = sprintf("%2.2i",0)
hour.now  = sprintf("%6.6i",0)
file.now  = paste(sites[s],"spin","-E-",year.now,"-",month.now,"-",day.now,"-"
,hour.now,"-",suffix,sep="")
cat(" - Reading file :",file.now,"...","\n")
now <- open.ncdf(paste(dat.dir,file.now,sep=""))
get.var.ncdf(now,"BLEAF")
ok = require(chron,lib.loc="/usr4/spclpgm/jmatthes/"); if (! ok) stop("Package chron is not available...")
ok = require(ncdf,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package ncdf is not available...")
ok = require(maps,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package maps is not available...")
ok = require(sp,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package raster is not available...")
ok = require(raster,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package raster is not available...")
ok = require(colorspace,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package raster is not available...")
#Set sites
sites <- c("PBL","PHA","PMB","PDL","PHO","PUN")
pft <- c(5,6,8,9,10,11)
suffix <- "g01.h5"
dpy <- c(31,28,31,30,31,30,31,31,30,31,30,31)
s <- 1
dat.dir    <- paste("/projectnb/cheas/paleon/ED_runs/phase1a_runs/",sites[s],"/analy/",sep="")
match.files <- grep("-E-",list.files(dat.dir))
files <- list.files(dat.dir)
mon.files  <- files[match.files] #monthly files only
#Get time window
yeara <- as.numeric(strsplit(mon.files,"-")[[1]][3]) #first year
yearz <- as.numeric(strsplit(mon.files,"-")[[length(mon.files)]][3]) #last year
montha <- as.numeric(strsplit(mon.files,"-")[[1]][4]) #first month
monthz <- as.numeric(strsplit(mon.files,"-")[[length(mon.files)]][4]) #first month
#Set up storage
atm_pres <- atm_vpd <- atm_pre <- atm_tmp <- atm_rnt <- atm_trsp <- atm_swat <- npp_site <- vector()
cbal.pft <- cbalbr.pft <- PAR.pft <- lai.pft <- matrix(nrow=((yearz-yeara-1)*12+(12-montha+1)),
ncol=length(pft))
fnpp <- matrix(ncol=8,nrow=(yearz-yeara+1))
y <- yeara
if (y == yeara){
month.begin = montha
}else{
month.begin = 1
}
if (y == yearz){
month.end = monthz
}else{
month.end = 12
}
#reset monthly storage
npp <- npp.leaf <- npp.croot <- npp.froot <- npp.sapwood <- npp.wood <- npp.seed <- vector()
ok = require(chron,lib.loc="/usr4/spclpgm/jmatthes/"); if (! ok) stop("Package chron is not available...")
ok = require(ncdf,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package ncdf is not available...")
ok = require(colorspace,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package raster is not available...")
#Setup analysis file structure
base  <- "/projectnb/cheas/paleon/ED_runs/phase1a_spinup/"
sites <- c("PBL","PHA","PMB","PDL","PHO","PUN")
niter <- length(list.dirs(paste(base,sites[1],"/",sep=""),recursive=FALSE)) #iterations/site
yeara <- 1850 #actually is 850, but had to trick ED
yearz <- 1855
pft   <- c(5,6,8,9,10,11) #set of PFTs used in analysis
sufx  <- "g01.h5"
#Pretty PFT plotting params
pft.names = c("C4 grass"          ,"Early tropical"    ,"Mid tropical"
,"Late tropical"     ,"Temperate C3 Grass","North Pine"
,"South Pine"        ,"Late conifer"      ,"Early hardwood"
,"Mid hardwood"      ,"Late hardwood"     ,"C3 crop"
,"C3 pasture"        ,"C4 crop"           ,"C4 pasture"
,"C3 grass"          ,"Araucaria"         ,"Total"             )
pft.cols  = c("gold"              ,"chartreuse"        ,"chartreuse4"
,"#004E00"           ,"mediumpurple1"     ,"deepskyblue"
,"mediumturquoise"   ,"royalblue4"        , "darkorange"
,"orangered"         ,"firebrick4"         , "purple4"
,"darkorchid1"       ,"darkgoldenrod"     ,   "khaki"
,"lightgoldenrod3"   ,"steelblue3"        ,   "grey22"         )
n.pft     = length(pft.names) - 1
s <- 1
y <- 1853
year.now  <-sprintf("%4.4i",y)
month.now <- sprintf("%2.2i",0)
day.now   <- sprintf("%2.2i",0)
hour.now  <- sprintf("%6.6i",0)
n <- 1
iter        <- sprintf("%02i",n)
dat.dir     <- paste(base,sites[s],"/spin",iter,"/analy/",sep="")
file.now    <- paste(sites[s],iter,"spin","-Y-",year.now,"-",month.now,"-",day.now,"-"
,hour.now,"-",sufx,sep="")
cat(" - Reading file :",file.now,"...","\n")
now <- open.ncdf(paste(dat.dir,file.now,sep=""))
#Grab cohort level variables.
ipft      <- get.var.ncdf(now,'PFT')
dbh       <- get.var.ncdf(now,'DBH')
nplant    <- get.var.ncdf(now,'NPLANT')
lai       <- get.var.ncdf(now,'LAI_CO')
hgt       <- get.var.ncdf(now,'HITE')
agb       <- get.var.ncdf(now,'AGB_CO')
bsa       <- get.var.ncdf(now,'BA_CO')
ipft
dbh
nplant
lai
agb
ncohorts  <- get.var.ncdf(now,'NCOHORTS_GLOBAL')
ncohorts
if(length(unique(ipft))<length(pft)){
tmp  <- (length(pft)-length(unique(ipft)))
ipft <- c(ipft,pft[!(pft %in% ipft)])
agb  <- c(agb,rep(0,tmp))
lai  <- c(lai,rep(0,tmp))
bsa  <- c(bsa,rep(0,tmp))
}
tapply(agb,ipft,sum)
tapply(lai,ipft,sum)
tapply(bsa,ipft,sum)
get.var.ncdf(now,'FAST_SOIL_C')
get.var.ncdf(now,'SLOW_SOIL_C')
get.var.ncdf(now,'STRUCTURAL_SOIL_C')
test <- open.ncdf("/projectnb/cheas/paleon/ED_runs/phase1a_spinup/PBL/spin01/histo/PBL01spin-S-1854-06-01-000000-g01.h5")
test
get.var.ncdf(test,"AVG_ROOT_MAINTENANCE")
get.var.ncdf(test,"AVG_LEAF_MAINTENANCE")
get.var.ncdf(test,"SLOW_SOIL_C")
get.var.ncdf(test,"FAST_SOIL_C")
get.var.ncdf(test,"PFT")
hist(get.var.ncdf(test,"PFT"))
hist(get.var.ncdf(test,"NPATCHES"))
get.var.ncdf(test,'TOTAL_AGB')
get.var.ncdf(test,"NCOHORTS_GLOBAL")
get.var.ncdf(test,"NPATCHES_GLOBAL")
dat.dir     <- paste(base,sites[s],"/spin",iter,"/histo/",sep="")
file.now    <- paste(sites[s],iter,"spin","-S-",year.now,"-",month.now,"-",day.now,"-"
,hour.now,"-",sufx,sep="")
cat(" - Reading file :",file.now,"...","\n")
now <- open.ncdf(paste(dat.dir,file.now,sep=""))
month.now <- sprintf("%2.2i",6)
day.now   <- sprintf("%2.2i",1)
hour.now  <- sprintf("%6.6i",0)
iter        <- sprintf("%02i",n)
dat.dir     <- paste(base,sites[s],"/spin",iter,"/histo/",sep="")
file.now    <- paste(sites[s],iter,"spin","-S-",year.now,"-",month.now,"-",day.now,"-"
,hour.now,"-",sufx,sep="")
cat(" - Reading file :",file.now,"...","\n")
now <- open.ncdf(paste(dat.dir,file.now,sep=""))
get.var.ncdf(now,"MONTHLY_MEAN_ROOT_RESP")
get.var.ncdf(now,"MONTHLY_MEAN_ROOT_RESPIRATION")
get.var.ncdf(now,"MMEAN_ROOT_MAINTENANCE")
get.var.ncdf(now,"ROOT_MAINTENANCE")
get.var.ncdf(now,"PFT")
get.var.ncdf(now,"MMEAN_ROOT_MAINTENANCE")
get.var.ncdf(now,"MMEAN_NPPLEAF_CO")
get.var.ncdf(now,"MMEAN_NPPROOT_CO")
get.var.ncdf(now,"MMEAN_NPPFROOT_CO")
get.var.ncdf(now,"MEAN_GPP")
get.var.ncdf(now,"NPATCHES_GLOBAL")
get.var.ncdf(now,"PFT")
tapply(get.var.ncdf(now,"MEAN_GPP"),get.var.ncdf(now,"PFT"))
tapply(get.var.ncdf(now,"MEAN_GPP"),get.var.ncdf(now,"PFT"),sum)
tapply(get.var.ncdf(now,"BSAPWOODB"),get.var.ncdf(now,"PFT"),sum)
tapply(get.var.ncdf(now,"AGB"),get.var.ncdf(now,"PFT"),sum)
tapply(get.var.ncdf(now,"AGB_CO"),get.var.ncdf(now,"PFT"),sum)
tapply(get.var.ncdf(now,"AGB_CO"),get.var.ncdf(now,"PFT"),count)
apply(get.var.ncdf(now,"PFT"),count))
apply(get.var.ncdf(now,"PFT"),count)
tapply(get.var.ncdf(now,"BROOT"),get.var.ncdf(now,"PFT"),count)
tapply(get.var.ncdf(now,"BFROOT"),get.var.ncdf(now,"PFT"),count)
tapply(get.var.ncdf(now,"BFROOT_CO"),get.var.ncdf(now,"PFT"),count)
tapply(get.var.ncdf(now,"BFROOT_CO"),get.var.ncdf(now,"PFT"),sum)
tapply(get.var.ncdf(now,"BROOT"),get.var.ncdf(now,"PFT"),sum)
get.var.ncdf(now,"ROOT_MAINTENANCE")
tapply(get.var.ncdf(now,"ROOT_MAINTENANCE"),get.var.ncdf(now,"PFT"),sum)
tapply(get.var.ncdf(now,"NPLANTS"),get.var.ncdf(now,"PFT"),sum)
get.var.ncdf(now,"TODAY_NPPCROOT")
get.var.ncdf(now,"DMEAN_LEAF_RESP")
get.var.ncdf(now,"DMEAN_LEAF_RESP_CO")
get.var.ncdf(now,"MONTHLY_DNDT")
test <- open.ncdf('/projectnb/cheas/paleon/ED_runs/phase1a_spinup/PBL/spin01/analy/PBL01spin-E-1853-06-00-000000-g01.h5')
get.var.ncdf(test,"MONTHLY_DNDT")
get.var.ncdf(now,"AVG_FSC")
get.var.ncdf(now,"FAST_SOIL_C")
get.var.ncdf(now,"FSC_IN")
get.var.ncdf(now,"SSC_IN")
get.var.ncdf(now,"STSC_IN")
get.var.ncdf(now,"SSL_IN")
fsc_in <- vector()
fsc_in <- ssc_in <- ssl_in <- vector()
for(n in 1:niter){
iter        <- sprintf("%02i",n)
dat.dir     <- paste(base,sites[s],"/spin",iter,"/histo/",sep="")
file.now    <- paste(sites[s],iter,"spin","-S-",year.now,"-",month.now,"-",day.now,"-"
,hour.now,"-",sufx,sep="")
cat(" - Reading file :",file.now,"...","\n")
now <- open.ncdf(paste(dat.dir,file.now,sep=""))
#get soil C params for SAS
fsc_in[n] <- get.var.ncdf(now,"FSC_IN")
ssc_in[n] <- get.var.ncdf(now,"SSC_IN")
ssl_in[n] <- get.var.ncdf(now,"SSL_IN")
#       #Grab cohort level variables.
#       ipft      <- get.var.ncdf(now,'PFT')
#       dbh       <- get.var.ncdf(now,'DBH')
#       nplant    <- get.var.ncdf(now,'NPLANT')
#       lai       <- get.var.ncdf(now,'LAI_CO')
#       hgt       <- get.var.ncdf(now,'HITE')
#       agb       <- get.var.ncdf(now,'AGB_CO')
#       bsa       <- get.var.ncdf(now,'BA_CO')
#
#       ncohorts  <- get.var.ncdf(now,'NCOHORTS_GLOBAL')
#       ncohort.per.patch    <- get.var.ncdf(now,'PACO_N')
#
#       #if any PFTs go extinct, make placeholders
#       if(length(unique(ipft))<length(pft)){
#         tmp  <- (length(pft)-length(unique(ipft)))
#         ipft <- c(ipft,pft[!(pft %in% ipft)])
#         agb  <- c(agb,rep(0,tmp))
#         lai  <- c(lai,rep(0,tmp))
#         bsa  <- c(bsa,rep(0,tmp))
#       }
#
#       agb.pft[(y-yeara+1),] <- tapply(agb,ipft,sum)
#       lai.pft[(y-yeara+1),] <- tapply(lai,ipft,sum)
#       bsa.pft[(y-yeara+1),] <- tapply(bsa,ipft,sum)
#
#       #Average annual carbon pools [kgC/m2]
#       balive[y-yeara+1]    <- sum(get.var.ncdf(now,'BALIVE')) #avg living biomass
#       bleaf[y-yeara+1]     <- sum(get.var.ncdf(now,'BLEAF'))
#       broot[y-yeara+1]     <- sum(get.var.ncdf(now,'BROOT'))
#       bsapa[y-yeara+1]     <- sum(get.var.ncdf(now,'BSAPWOODA'))
#       bsapb[y-yeara+1]     <- sum(get.var.ncdf(now,'BSAPWOODB'))
#       sfast[y-yeara+1]     <- get.var.ncdf(now,'FAST_SOIL_C')
#       sslow[y-yeara+1]     <- get.var.ncdf(now,'SLOW_SOIL_C')
#       sstruc[y-yeara+1]    <- get.var.ncdf(now,'STRUCTURAL_SOIL_C')
#
close.ncdf(now)
}
fsc_in
ssl_in
yearz <- 1859
for (y in yeara:yearz){
#Make the file name.
year.now  <-sprintf("%4.4i",y)
month.now <- sprintf("%2.2i",6)
day.now   <- sprintf("%2.2i",1)
hour.now  <- sprintf("%6.6i",0)
for(n in 1:niter){
iter        <- sprintf("%02i",n)
dat.dir     <- paste(base,sites[s],"/spin",iter,"/histo/",sep="")
file.now    <- paste(sites[s],iter,"spin","-S-",year.now,"-",month.now,"-",day.now,"-"
,hour.now,"-",sufx,sep="")
cat(" - Reading file :",file.now,"...","\n")
now <- open.ncdf(paste(dat.dir,file.now,sep=""))
#get soil C params for SAS
fsc_in[n] <- get.var.ncdf(now,"FSC_IN")
ssc_in[n] <- get.var.ncdf(now,"SSC_IN")
ssl_in[n] <- get.var.ncdf(now,"SSL_IN")
#       #Grab cohort level variables.
#       ipft      <- get.var.ncdf(now,'PFT')
#       dbh       <- get.var.ncdf(now,'DBH')
#       nplant    <- get.var.ncdf(now,'NPLANT')
#       lai       <- get.var.ncdf(now,'LAI_CO')
#       hgt       <- get.var.ncdf(now,'HITE')
#       agb       <- get.var.ncdf(now,'AGB_CO')
#       bsa       <- get.var.ncdf(now,'BA_CO')
#
#       ncohorts  <- get.var.ncdf(now,'NCOHORTS_GLOBAL')
#       ncohort.per.patch    <- get.var.ncdf(now,'PACO_N')
#
#       #if any PFTs go extinct, make placeholders
#       if(length(unique(ipft))<length(pft)){
#         tmp  <- (length(pft)-length(unique(ipft)))
#         ipft <- c(ipft,pft[!(pft %in% ipft)])
#         agb  <- c(agb,rep(0,tmp))
#         lai  <- c(lai,rep(0,tmp))
#         bsa  <- c(bsa,rep(0,tmp))
#       }
#
#       agb.pft[(y-yeara+1),] <- tapply(agb,ipft,sum)
#       lai.pft[(y-yeara+1),] <- tapply(lai,ipft,sum)
#       bsa.pft[(y-yeara+1),] <- tapply(bsa,ipft,sum)
#
#       #Average annual carbon pools [kgC/m2]
#       balive[y-yeara+1]    <- sum(get.var.ncdf(now,'BALIVE')) #avg living biomass
#       bleaf[y-yeara+1]     <- sum(get.var.ncdf(now,'BLEAF'))
#       broot[y-yeara+1]     <- sum(get.var.ncdf(now,'BROOT'))
#       bsapa[y-yeara+1]     <- sum(get.var.ncdf(now,'BSAPWOODA'))
#       bsapb[y-yeara+1]     <- sum(get.var.ncdf(now,'BSAPWOODB'))
#       sfast[y-yeara+1]     <- get.var.ncdf(now,'FAST_SOIL_C')
#       sslow[y-yeara+1]     <- get.var.ncdf(now,'SLOW_SOIL_C')
#       sstruc[y-yeara+1]    <- get.var.ncdf(now,'STRUCTURAL_SOIL_C')
#
close.ncdf(now)
}
fsc_in_y[y-yeara+1] <- mean(fsc_in,na.rm=TRUE)
ssc_in_y[y-yeara+1] <- mean(ssc_in,na.rm=TRUE)
ssl_in_y[y-yeara+1] <- mean(ssl_in,na.rm=TRUE)
}
fsc_in_y <- ssc_in_y <- ssl_in_y <- vector()
yearz <- 1860
for (y in yeara:yearz){
#Make the file name.
year.now  <-sprintf("%4.4i",y)
month.now <- sprintf("%2.2i",6)
day.now   <- sprintf("%2.2i",1)
hour.now  <- sprintf("%6.6i",0)
for(n in 1:niter){
iter        <- sprintf("%02i",n)
dat.dir     <- paste(base,sites[s],"/spin",iter,"/histo/",sep="")
file.now    <- paste(sites[s],iter,"spin","-S-",year.now,"-",month.now,"-",day.now,"-"
,hour.now,"-",sufx,sep="")
cat(" - Reading file :",file.now,"...","\n")
now <- open.ncdf(paste(dat.dir,file.now,sep=""))
#get soil C params for SAS
fsc_in[n] <- get.var.ncdf(now,"FSC_IN")
ssc_in[n] <- get.var.ncdf(now,"SSC_IN")
ssl_in[n] <- get.var.ncdf(now,"SSL_IN")
#       #Grab cohort level variables.
#       ipft      <- get.var.ncdf(now,'PFT')
#       dbh       <- get.var.ncdf(now,'DBH')
#       nplant    <- get.var.ncdf(now,'NPLANT')
#       lai       <- get.var.ncdf(now,'LAI_CO')
#       hgt       <- get.var.ncdf(now,'HITE')
#       agb       <- get.var.ncdf(now,'AGB_CO')
#       bsa       <- get.var.ncdf(now,'BA_CO')
#
#       ncohorts  <- get.var.ncdf(now,'NCOHORTS_GLOBAL')
#       ncohort.per.patch    <- get.var.ncdf(now,'PACO_N')
#
#       #if any PFTs go extinct, make placeholders
#       if(length(unique(ipft))<length(pft)){
#         tmp  <- (length(pft)-length(unique(ipft)))
#         ipft <- c(ipft,pft[!(pft %in% ipft)])
#         agb  <- c(agb,rep(0,tmp))
#         lai  <- c(lai,rep(0,tmp))
#         bsa  <- c(ba,rep(0,tmp))
#       }
#
#       agb.pft[(y-yeara+1),] <- tapply(agb,ipft,sum)
#       lai.pft[(y-yeara+1),] <- tapply(lai,ipft,sum)
#       bsa.pft[(y-yeara+1),] <- tapply(bsa,ipft,sum)
#
#       #Average annual carbon pools [kgC/m2]
#       balive[y-yeara+1]    <- sum(get.var.ncdf(now,'BALIVE')) #avg living biomass
#       bleaf[y-yeara+1]     <- sum(get.var.ncdf(now,'BLEAF'))
#       broot[y-yeara+1]     <- sum(get.var.ncdf(now,'BROOT'))
#       bsapa[y-yeara+1]     <- sum(get.var.ncdf(now,'BSAPWOODA'))
#       bsapb[y-yeara+1]     <- sum(get.var.ncdf(now,'BSAPWOODB'))
#       sfast[y-yeara+1]     <- get.var.ncdf(now,'FAST_SOIL_C')
#       sslow[y-yeara+1]     <- get.var.ncdf(now,'SLOW_SOIL_C')
#       sstruc[y-yeara+1]    <- get.var.ncdf(now,'STRUCTURAL_SOIL_C')
#
close.ncdf(now)
}
fsc_in_y[y-yeara+1] <- mean(fsc_in,na.rm=TRUE)
ssc_in_y[y-yeara+1] <- mean(ssc_in,na.rm=TRUE)
ssl_in_y[y-yeara+1] <- mean(ssl_in,na.rm=TRUE)
}
plot(fsc_in)
plot(ssc_in)
plot(ssc_in_y)
plot(fsc_in_y)
plot(ssl_in_y)
