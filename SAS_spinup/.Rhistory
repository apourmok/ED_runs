ok = require(chron,lib.loc="/usr4/spclpgm/jmatthes/"); if (! ok) stop("Package chron is not available...")
ok = require(ncdf,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package ncdf is not available...")
ok = require(maps,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package maps is not available...")
ok = require(sp,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package raster is not available...")
ok = require(raster,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package raster is not available...")
ok = require(colorspace,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package raster is not available...")
#Set sites
sites <- c("PBL","PHA","PMB","PDL","PHO","PUN")
s <- 1
pft <- c(5,6,8,9,10,11)
dat.dir    <- paste("/projectnb/cheas/paleon/ED_runs/phase1a_runs/",sites[s],"/analy/",sep="")
match.files <- grep("-Y-",list.files(dat.dir))
files <- list.files(dat.dir)
ann.files  <- files[match.files] #yearly files only
#Get time window
yeara <- as.numeric(strsplit(ann.files,"-")[[1]][3]) #first year
yearz <- as.numeric(strsplit(ann.files,"-")[[length(ann.files)]][3]) #last year
yeara
yearz
y <- yeara
month.begin <- 6
dat.dir    <- paste("/projectnb/cheas/paleon/ED_runs/phase1a_runs/",sites[s],"/analy/",sep="")
match.files <- grep("-E-",list.files(dat.dir))
files <- list.files(dat.dir)
mon.files  <- files[match.files] #monthly files only
#Get time window
yeara <- as.numeric(strsplit(mon.files,"-")[[1]][3]) #first year
yearz <- as.numeric(strsplit(mon.files,"-")[[length(mon.files)]][3]) #last year
montha <- as.numeric(strsplit(mon.files,"-")[[1]][4]) #first month
monthz <- as.numeric(strsplit(mon.files,"-")[[length(mon.files)]][4]) #first month
dat.dir
year.now  = sprintf("%4.4i",y)
month.now = sprintf("%2.2i",m)
day.now   = sprintf("%2.2i",0)
hour.now  = sprintf("%6.6i",0)
file.now  = paste(sites[s],"spin","-E-",year.now,"-",month.now,"-",day.now,"-"
,hour.now,"-",suffix,sep="")
m
m <- 6
year.now  = sprintf("%4.4i",y)
month.now = sprintf("%2.2i",m)
day.now   = sprintf("%2.2i",0)
hour.now  = sprintf("%6.6i",0)
file.now  = paste(sites[s],"spin","-E-",year.now,"-",month.now,"-",day.now,"-"
,hour.now,"-",suffix,sep="")
cat(" - Reading file :",file.now,"...","\n")
now <- open.ncdf(paste(dat.dir,file.now,sep=""))
suffix <- "g01.h5"
year.now  = sprintf("%4.4i",y)
month.now = sprintf("%2.2i",m)
day.now   = sprintf("%2.2i",0)
hour.now  = sprintf("%6.6i",0)
file.now  = paste(sites[s],"spin","-E-",year.now,"-",month.now,"-",day.now,"-"
,hour.now,"-",suffix,sep="")
cat(" - Reading file :",file.now,"...","\n")
now <- open.ncdf(paste(dat.dir,file.now,sep=""))
ipft      <- get.var.ncdf(now,'PFT')
croot <- get.var.ncdf(now,"MMEAN_NPPLEAF")
croot
y
y <- 2000
year.now  = sprintf("%4.4i",y)
month.now = sprintf("%2.2i",m)
day.now   = sprintf("%2.2i",0)
hour.now  = sprintf("%6.6i",0)
file.now  = paste(sites[s],"spin","-E-",year.now,"-",month.now,"-",day.now,"-"
,hour.now,"-",suffix,sep="")
cat(" - Reading file :",file.now,"...","\n")
now <- open.ncdf(paste(dat.dir,file.now,sep=""))
croot <- get.var.ncdf(now,"MMEAN_NPPLEAF")
croot
croot <- get.var.ncdf(now,"MMEAN_PLANT_RESP")
croot <- get.var.ncdf(now,"MMEAN_PLRESP")
croot
croot <- get.var.ncdf(now,"MMEAN_GPP")
croot
croot <- get.var.ncdf(now,"MMEAN_NPPLEAF")
croot
croot <- get.var.ncdf(now,"MMEAN_NPPCROOT")
croot
leaf <- get.var.ncdf(now,"MMEAN_NPPLEAF")
froot <- get.var.ncdf(now,"MMEAN_NPPFROOT")
sap <- get.var.ncdf(now,"MMEAN_NPPSAPWOOD")
sap
wood <- get.var.ncdf(now,"MMEAN_NPPWOOD")
wood
seed <- get.var.ncdf(now,"MMEAN_SEED")
seed <- get.var.ncdf(now,"MMEAN_SEEDS")
seed <- get.var.ncdf(now,"MMEAN_NPPSEEDS")
seed
seed + wood + sapwood + froot + croot + leaf
seed + wood + sap + froot + croot + leaf
npp
npp <- get.var.ncdf(now,"MMEAN_PLRESP") - get.var.ncdf(now,"MMEAN_NPP")
npp <- get.var.ncdf(now,"MMEAN_PLRESP") - get.var.ncdf(now,"MMEAN_NPPDAILY")
npp
seed + wood + sap + froot + croot + leaf
npp <- get.var.ncdf(now,"MMEAN_PLRESP") - get.var.ncdf(now,"MMEAN_GPPDAILY")
npp <- get.var.ncdf(now,"MMEAN_PLRESP") - get.var.ncdf(now,"MMEAN_GPP")
npp
npp <- get.var.ncdf(now,"MMEAN_GPP") - get.var.ncdf(now,"MMEAN_PLRESP")
npp
seed + wood + sap + froot + croot + leaf
seed + wood + froot + croot + leaf
leaf
m
m <- 12
wood/npp
leaf/npp
froot/npp
(froot+croot)/npp
froot
croot
npp
get.var.ncdf(now,"MMEAN_NPPDAILY")
npp <- get.var.ncdf(now,"MMEAN_GPP") - get.var.ncdf(now,"MMEAN_PLRESP")
npp/get.var.ncdf(now,"MMEAN_NPPLEAF")
dpy <- c(31,28,31,30,31,30,31,31,30,31,30,31)
length(dpy)
dpy[m]
npp <- get.var.ncdf(now,"MMEAN_NPPDAILY")/365*dpy[m]
npp
npp.leaf  <- get.var.ncdf(now,"MMEAN_NPPLEAF")/365*dpy[m]
npp.leaf
npp.froot <- get.var.ncdf(now,"MMEAN_NPPFROOT")/365*dpy[m]
npp.croot <- get.var.ncdf(now,"MMEAN_NPPCROOT")/365*dpy[m]
npp <- npp.leaf <- npp.croot <- npp.froot <- npp.sapwood <- npp.wood <- npp.seed <- vector()
for(m in month.begin:month.end){
#calculate monthly index for storage
if(y==yeara){
mon.ind <- m-montha+1
}else{
mon.ind <- ((y-1)-yeara)*12+m+montha
}
print(mon.ind)
#Make the file name.
year.now  = sprintf("%4.4i",y)
month.now = sprintf("%2.2i",m)
day.now   = sprintf("%2.2i",0)
hour.now  = sprintf("%6.6i",0)
file.now  = paste(sites[s],"spin","-E-",year.now,"-",month.now,"-",day.now,"-"
,hour.now,"-",suffix,sep="")
cat(" - Reading file :",file.now,"...","\n")
now <- open.ncdf(paste(dat.dir,file.now,sep=""))
#1. sum monthly NPP pools
ind <- m-month.begin+1
npp[ind]         <- get.var.ncdf(now,"MMEAN_NPPDAILY")/365*dpy[m]
npp.leaf[ind]    <- get.var.ncdf(now,"MMEAN_NPPLEAF")/365*dpy[m]
npp.croot[ind]   <- get.var.ncdf(now,"MMEAN_NPPCROOT")/365*dpy[m]
npp.froot[ind]   <- get.var.ncdf(now,"MMEAN_NPPFROOT")/365*dpy[m]
npp.sapwood[ind] <- get.var.ncdf(now,"MMEAN_NPPSAPWOOD")/365*dpy[m]
npp.wood[ind]    <- get.var.ncdf(now,"MMEAN_NPPWOOD")/365*dpy[m]
npp.seed[ind]    <- get.var.ncdf(now,"MMEAN_NPPSEEDS")/365*dpy[m]
close.ncdf(now)
}
month.end <- 12
for(m in month.begin:month.end){
#calculate monthly index for storage
if(y==yeara){
mon.ind <- m-montha+1
}else{
mon.ind <- ((y-1)-yeara)*12+m+montha
}
print(mon.ind)
#Make the file name.
year.now  = sprintf("%4.4i",y)
month.now = sprintf("%2.2i",m)
day.now   = sprintf("%2.2i",0)
hour.now  = sprintf("%6.6i",0)
file.now  = paste(sites[s],"spin","-E-",year.now,"-",month.now,"-",day.now,"-"
,hour.now,"-",suffix,sep="")
cat(" - Reading file :",file.now,"...","\n")
now <- open.ncdf(paste(dat.dir,file.now,sep=""))
#1. sum monthly NPP pools
ind <- m-month.begin+1
npp[ind]         <- get.var.ncdf(now,"MMEAN_NPPDAILY")/365*dpy[m]
npp.leaf[ind]    <- get.var.ncdf(now,"MMEAN_NPPLEAF")/365*dpy[m]
npp.croot[ind]   <- get.var.ncdf(now,"MMEAN_NPPCROOT")/365*dpy[m]
npp.froot[ind]   <- get.var.ncdf(now,"MMEAN_NPPFROOT")/365*dpy[m]
npp.sapwood[ind] <- get.var.ncdf(now,"MMEAN_NPPSAPWOOD")/365*dpy[m]
npp.wood[ind]    <- get.var.ncdf(now,"MMEAN_NPPWOOD")/365*dpy[m]
npp.seed[ind]    <- get.var.ncdf(now,"MMEAN_NPPSEEDS")/365*dpy[m]
close.ncdf(now)
}
npp
npp.leaf
npp.croot
sum(npp)
sum(npp.leaf)
sum(npp.leaf)/sum(npp)
sum(npp.froot)/sum(npp)
sum(npp.croot)/sum(npp)
sum(npp.wood)/sum(npp)
sum(npp.sapwood)/sum(npp)
sum(npp.seed)/sum(npp)
sum(npp.seed,npp.wood)/sum(npp)
yind <- y-yeara+1
yind
sum(npp.leaf,npp.croot,npp.froot,npp.sapwood,npp.wood,npp.seed)/sum(npp)
sum(npp.leaf,npp.croot,npp.froot,npp.sapwood,npp.seed)/sum(npp)
sum(npp.leaf)/sum(npp) #leaf alloc
length(npp.leaf)
month.begin <- 1
for(m in month.begin:month.end){
#Make the file name.
year.now  = sprintf("%4.4i",y)
month.now = sprintf("%2.2i",m)
day.now   = sprintf("%2.2i",0)
hour.now  = sprintf("%6.6i",0)
file.now  = paste(sites[s],"spin","-E-",year.now,"-",month.now,"-",day.now,"-"
,hour.now,"-",suffix,sep="")
cat(" - Reading file :",file.now,"...","\n")
now <- open.ncdf(paste(dat.dir,file.now,sep=""))
#1. calculate monthly NPP pools
mind              <- m-month.begin+1 #monthly index
npp[mind]         <- get.var.ncdf(now,"MMEAN_NPPDAILY")/365*dpy[m]
npp.leaf[mind]    <- get.var.ncdf(now,"MMEAN_NPPLEAF")/365*dpy[m]
npp.croot[mind]   <- get.var.ncdf(now,"MMEAN_NPPCROOT")/365*dpy[m]
npp.froot[mind]   <- get.var.ncdf(now,"MMEAN_NPPFROOT")/365*dpy[m]
npp.sapwood[mind] <- get.var.ncdf(now,"MMEAN_NPPSAPWOOD")/365*dpy[m]
npp.wood[mind]    <- get.var.ncdf(now,"MMEAN_NPPWOOD")/365*dpy[m]
npp.seed[mind]    <- get.var.ncdf(now,"MMEAN_NPPSEEDS")/365*dpy[m]
close.ncdf(now)
}
sum(npp.leaf,npp.croot,npp.froot,npp.sapwood,npp.wood,npp.seed)/sum(npp) #total alloc
sum(npp.leaf)/sum(npp)
sum(npp.croot)/sum(npp)
sum(npp.froot)/sum(npp)
sum(npp.sapwood)/sum(npp)
fnpp[6,y]       <- sum(npp.wood)/sum(npp)
fnpp <- matrix(ncol=7,nrow=(yearz-yera+1))
fnpp <- matrix(ncol=7,nrow=(yearz-yeara+1))
fnpp[1,y]       <- sum(npp.leaf,npp.croot,npp.froot,npp.sapwood,npp.wood,npp.seed)/sum(npp) #total alloc
fnpp[2,y]       <- sum(npp.leaf)/sum(npp)
fnpp[3,y]       <- sum(npp.croot)/sum(npp)
fnpp[4,y]       <- sum(npp.froot)/sum(npp)
fnpp[5,y]       <- sum(npp.sapwood)/sum(npp)
fnpp[6,y]       <- sum(npp.wood)/sum(npp)
fnpp[7,y]       <- sum(npp.seed/sum(npp)
fnpp[y,1]       <- sum(npp.leaf,npp.croot,npp.froot,npp.sapwood,npp.wood,npp.seed)/sum(npp) #total alloc
fnpp[y,2]       <- sum(npp.leaf)/sum(npp)
fnpp[y,3]       <- sum(npp.croot)/sum(npp)
fnpp[y,4]       <- sum(npp.froot)/sum(npp)
fnpp[y,5]       <- sum(npp.sapwood)/sum(npp)
fnpp[y,6]       <- sum(npp.wood)/sum(npp)
fnpp[y,7]       <- sum(npp.seed/sum(npp)
)
yind <- y-yeara+1
fnpp[yind,1]       <- sum(npp.leaf,npp.croot,npp.froot,npp.sapwood,npp.wood,npp.seed)/sum(npp) #total alloc
fnpp[yind,2]       <- sum(npp.leaf)/sum(npp)
fnpp[yind,3]       <- sum(npp.croot)/sum(npp)
fnpp[yind,4]       <- sum(npp.froot)/sum(npp)
fnpp[yind,5]       <- sum(npp.sapwood)/sum(npp)
fnpp[yind,6]       <- sum(npp.wood)/sum(npp)
fnpp[yind,7]       <- sum(npp.seed/sum(npp)
)
fnpp[yind,]
dat.dir    <- paste("/projectnb/cheas/paleon/ED_runs/phase1a_runs/",sites[s],"/analy/",sep="")
match.files <- grep("-E-",list.files(dat.dir))
files <- list.files(dat.dir)
mon.files  <- files[match.files] #monthly files only
#Get time window
yeara <- as.numeric(strsplit(mon.files,"-")[[1]][3]) #first year
yearz <- as.numeric(strsplit(mon.files,"-")[[length(mon.files)]][3]) #last year
montha <- as.numeric(strsplit(mon.files,"-")[[1]][4]) #first month
monthz <- as.numeric(strsplit(mon.files,"-")[[length(mon.files)]][4]) #first month
#Set up storage
atm_pres <- atm_vpd <- atm_pre <- atm_tmp <- atm_rnt <- atm_trsp <- atm_swat <- npp_site <- vector()
cbal.pft <- cbalbr.pft <- PAR.pft <- lai.pft <- matrix(nrow=((yearz-yeara-1)*12+(12-montha+1)),
ncol=length(pft))
fnpp <- matrix(ncol=7,nrow=(yearz-yeara+1))
for(y in yeara:yearz){
#calculate month start/end based on year
if (y == yeara){
month.begin = montha
}else{
month.begin = 1
}
if (y == yearz){
month.end = monthz
}else{
month.end = 12
}
#reset monthly storage
npp <- npp.leaf <- npp.croot <- npp.froot <- npp.sapwood <- npp.wood <- npp.seed <- vector()
for(m in month.begin:month.end){
#Make the file name.
year.now  = sprintf("%4.4i",y)
month.now = sprintf("%2.2i",m)
day.now   = sprintf("%2.2i",0)
hour.now  = sprintf("%6.6i",0)
file.now  = paste(sites[s],"spin","-E-",year.now,"-",month.now,"-",day.now,"-"
,hour.now,"-",suffix,sep="")
cat(" - Reading file :",file.now,"...","\n")
now <- open.ncdf(paste(dat.dir,file.now,sep=""))
#1. calculate monthly NPP pools
mind              <- m-month.begin+1 #monthly index
npp[mind]         <- get.var.ncdf(now,"MMEAN_NPPDAILY")/365*dpy[m]
npp.leaf[mind]    <- get.var.ncdf(now,"MMEAN_NPPLEAF")/365*dpy[m]
npp.croot[mind]   <- get.var.ncdf(now,"MMEAN_NPPCROOT")/365*dpy[m]
npp.froot[mind]   <- get.var.ncdf(now,"MMEAN_NPPFROOT")/365*dpy[m]
npp.sapwood[mind] <- get.var.ncdf(now,"MMEAN_NPPSAPWOOD")/365*dpy[m]
npp.wood[mind]    <- get.var.ncdf(now,"MMEAN_NPPWOOD")/365*dpy[m]
npp.seed[mind]    <- get.var.ncdf(now,"MMEAN_NPPSEEDS")/365*dpy[m]
close.ncdf(now)
}
#2. Find fraction of total annual NPP transferred to pools
yind <- y-yeara+1
fnpp[yind,1]        <- sum(npp.leaf,npp.croot,npp.froot,npp.sapwood,npp.wood,npp.seed)/sum(npp)
fnpp[yind,2]        <- sum(npp.leaf)/sum(npp)
fnpp[yind,3]        <- sum(npp.croot)/sum(npp)
fnpp[yind,4]        <- sum(npp.froot)/sum(npp)
fnpp[yind,5]        <- sum(npp.sapwood)/sum(npp)
fnpp[yind,6]        <- sum(npp.wood)/sum(npp)
fnpp[yind,7]        <- sum(npp.seed/sum(npp)
}
fnpp <- matrix(ncol=7,nrow=(yearz-yeara+1))
#loop over months and aggregate monthly mean data
for(y in yeara:yearz){
#calculate month start/end based on year
if (y == yeara){
month.begin = montha
}else{
month.begin = 1
}
if (y == yearz){
month.end = monthz
}else{
month.end = 12
}
#reset monthly storage
npp <- npp.leaf <- npp.croot <- npp.froot <- npp.sapwood <- npp.wood <- npp.seed <- vector()
for(m in month.begin:month.end){
#Make the file name.
year.now  = sprintf("%4.4i",y)
month.now = sprintf("%2.2i",m)
day.now   = sprintf("%2.2i",0)
hour.now  = sprintf("%6.6i",0)
file.now  = paste(sites[s],"spin","-E-",year.now,"-",month.now,"-",day.now,"-"
,hour.now,"-",suffix,sep="")
cat(" - Reading file :",file.now,"...","\n")
now <- open.ncdf(paste(dat.dir,file.now,sep=""))
#1. calculate monthly NPP pools
mind              <- m-month.begin+1 #monthly index
npp[mind]         <- get.var.ncdf(now,"MMEAN_NPPDAILY")/365*dpy[m]
npp.leaf[mind]    <- get.var.ncdf(now,"MMEAN_NPPLEAF")/365*dpy[m]
npp.croot[mind]   <- get.var.ncdf(now,"MMEAN_NPPCROOT")/365*dpy[m]
npp.froot[mind]   <- get.var.ncdf(now,"MMEAN_NPPFROOT")/365*dpy[m]
npp.sapwood[mind] <- get.var.ncdf(now,"MMEAN_NPPSAPWOOD")/365*dpy[m]
npp.wood[mind]    <- get.var.ncdf(now,"MMEAN_NPPWOOD")/365*dpy[m]
npp.seed[mind]    <- get.var.ncdf(now,"MMEAN_NPPSEEDS")/365*dpy[m]
close.ncdf(now)
}
#2. Find fraction of total annual NPP transferred to pools
yind <- y-yeara+1
fnpp[yind,1]        <- sum(npp.leaf,npp.croot,npp.froot,npp.sapwood,npp.wood,npp.seed)/sum(npp)
fnpp[yind,2]        <- sum(npp.leaf)/sum(npp)
fnpp[yind,3]        <- sum(npp.croot)/sum(npp)
fnpp[yind,4]        <- sum(npp.froot)/sum(npp)
fnpp[yind,5]        <- sum(npp.sapwood)/sum(npp)
fnpp[yind,6]        <- sum(npp.wood)/sum(npp)
fnpp[yind,7]        <- sum(npp.seed)/sum(npp)
}
plot(fnpp[,1])
plot(fnpp[,2])
plot(fnpp[,3])
plot(fnpp[,4])
plot(fnpp[,5])
plot(fnpp[,6])
plot(fnpp[,7])
plot(fnpp[,1])
now
get.var.ncdf(now,"BLEAF")
year.now  = sprintf("%4.4i",y)
month.now = sprintf("%2.2i",m)
day.now   = sprintf("%2.2i",0)
hour.now  = sprintf("%6.6i",0)
file.now  = paste(sites[s],"spin","-E-",year.now,"-",month.now,"-",day.now,"-"
,hour.now,"-",suffix,sep="")
cat(" - Reading file :",file.now,"...","\n")
now <- open.ncdf(paste(dat.dir,file.now,sep=""))
get.var.ncdf(now,"BLEAF")
ok = require(chron,lib.loc="/usr4/spclpgm/jmatthes/"); if (! ok) stop("Package chron is not available...")
ok = require(ncdf,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package ncdf is not available...")
ok = require(maps,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package maps is not available...")
ok = require(sp,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package raster is not available...")
ok = require(raster,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package raster is not available...")
ok = require(colorspace,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package raster is not available...")
#Set sites
sites <- c("PBL","PHA","PMB","PDL","PHO","PUN")
pft <- c(5,6,8,9,10,11)
suffix <- "g01.h5"
dpy <- c(31,28,31,30,31,30,31,31,30,31,30,31)
s <- 1
dat.dir    <- paste("/projectnb/cheas/paleon/ED_runs/phase1a_runs/",sites[s],"/analy/",sep="")
match.files <- grep("-E-",list.files(dat.dir))
files <- list.files(dat.dir)
mon.files  <- files[match.files] #monthly files only
#Get time window
yeara <- as.numeric(strsplit(mon.files,"-")[[1]][3]) #first year
yearz <- as.numeric(strsplit(mon.files,"-")[[length(mon.files)]][3]) #last year
montha <- as.numeric(strsplit(mon.files,"-")[[1]][4]) #first month
monthz <- as.numeric(strsplit(mon.files,"-")[[length(mon.files)]][4]) #first month
#Set up storage
atm_pres <- atm_vpd <- atm_pre <- atm_tmp <- atm_rnt <- atm_trsp <- atm_swat <- npp_site <- vector()
cbal.pft <- cbalbr.pft <- PAR.pft <- lai.pft <- matrix(nrow=((yearz-yeara-1)*12+(12-montha+1)),
ncol=length(pft))
fnpp <- matrix(ncol=8,nrow=(yearz-yeara+1))
y <- yeara
if (y == yeara){
month.begin = montha
}else{
month.begin = 1
}
if (y == yearz){
month.end = monthz
}else{
month.end = 12
}
#reset monthly storage
npp <- npp.leaf <- npp.croot <- npp.froot <- npp.sapwood <- npp.wood <- npp.seed <- vector()
